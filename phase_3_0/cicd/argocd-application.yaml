# üöÄ **PHASE 3.0 ARGOCD APPLICATION CONFIGURATION**
#
# GitOps application definition for automated deployment and management
# of Phase 3.0 Enterprise Production System using ArgoCD.
#
# This configuration enables:
# - Automated deployments from Git
# - Multi-environment support
# - Self-healing and drift correction
# - Rollback capabilities
# - Health monitoring and sync status

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: void-basic-phase3-enterprise
  namespace: argocd
  labels:
    app.kubernetes.io/name: void-basic-phase3
    app.kubernetes.io/component: enterprise-platform
    app.kubernetes.io/part-of: void-basic
    app.kubernetes.io/version: "3.0"
    environment: production
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook: PreSync
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: production-deployments
    notifications.argoproj.io/subscribe.on-sync-failed.slack: production-alerts
    notifications.argoproj.io/subscribe.on-health-degraded.slack: production-alerts
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # üìÇ SOURCE CONFIGURATION
  source:
    repoURL: https://github.com/Zykairotis/Void-basic.git
    targetRevision: main
    path: phase_3_0/infrastructure/k8s

    # Helm configuration for parameterized deployments
    helm:
      # Values files for environment-specific configuration
      valueFiles:
        - values-production.yaml

      # Dynamic parameters for runtime configuration
      parameters:
        - name: image.registry
          value: ghcr.io
        - name: image.repository
          value: zykairotis/void-basic/phase3-enterprise
        - name: image.tag
          value: latest
        - name: environment
          value: production
        - name: replicaCount.backend
          value: "3"
        - name: replicaCount.frontend
          value: "2"
        - name: replicaCount.compliance
          value: "2"
        - name: resources.backend.requests.cpu
          value: "500m"
        - name: resources.backend.requests.memory
          value: "1Gi"
        - name: resources.backend.limits.cpu
          value: "2000m"
        - name: resources.backend.limits.memory
          value: "4Gi"
        - name: autoscaling.enabled
          value: "true"
        - name: autoscaling.minReplicas
          value: "2"
        - name: autoscaling.maxReplicas
          value: "10"
        - name: autoscaling.targetCPUUtilizationPercentage
          value: "70"
        - name: ingress.enabled
          value: "true"
        - name: ingress.className
          value: "nginx"
        - name: ingress.tls.enabled
          value: "true"
        - name: monitoring.enabled
          value: "true"
        - name: monitoring.prometheus.enabled
          value: "true"
        - name: monitoring.grafana.enabled
          value: "true"
        - name: security.networkPolicies.enabled
          value: "true"
        - name: security.podSecurityPolicy.enabled
          value: "true"
        - name: compliance.gdpr.enabled
          value: "true"
        - name: compliance.hipaa.enabled
          value: "true"
        - name: compliance.sox.enabled
          value: "true"

      # Helm release configuration
      releaseName: void-basic-phase3

      # Skip CRD installation (manage separately)
      skipCrds: false

      # Helm timeout
      timeout: 600s

  # üéØ DESTINATION CONFIGURATION
  destination:
    server: https://kubernetes.default.svc
    namespace: void-basic-phase3-production

  # üîÑ SYNC POLICY CONFIGURATION
  syncPolicy:
    # Automated synchronization settings
    automated:
      # Enable automatic synchronization
      prune: true
      selfHeal: true
      allowEmpty: false

    # Synchronization options
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - ApplyOutOfSyncOnly=true
      - RespectIgnoreDifferences=true
      - Replace=false

    # Retry configuration for failed syncs
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  # üè• HEALTH AND STATUS CONFIGURATION
  revisionHistoryLimit: 10

  # Ignore certain differences that shouldn't trigger sync
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: ""
      kind: Service
      jsonPointers:
        - /metadata/annotations/kubectl.kubernetes.io~1last-applied-configuration
    - group: networking.k8s.io
      kind: Ingress
      jsonPointers:
        - /metadata/annotations/nginx.ingress.kubernetes.io~1ssl-redirect

---
# üß™ **STAGING ENVIRONMENT APPLICATION**
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: void-basic-phase3-staging
  namespace: argocd
  labels:
    app.kubernetes.io/name: void-basic-phase3
    app.kubernetes.io/component: enterprise-platform
    app.kubernetes.io/part-of: void-basic
    app.kubernetes.io/version: "3.0"
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: staging-deployments
    notifications.argoproj.io/subscribe.on-sync-failed.slack: staging-alerts
spec:
  source:
    repoURL: https://github.com/Zykairotis/Void-basic.git
    targetRevision: develop
    path: phase_3_0/infrastructure/k8s
    helm:
      valueFiles:
        - values-staging.yaml
      parameters:
        - name: environment
          value: staging
        - name: replicaCount.backend
          value: "1"
        - name: replicaCount.frontend
          value: "1"
        - name: resources.backend.requests.cpu
          value: "250m"
        - name: resources.backend.requests.memory
          value: "512Mi"
        - name: autoscaling.enabled
          value: "false"
        - name: ingress.className
          value: "nginx"
        - name: ingress.annotations.nginx\.ingress\.kubernetes\.io/ssl-redirect
          value: "false"
      releaseName: void-basic-phase3-staging
      timeout: 300s

  destination:
    server: https://kubernetes.default.svc
    namespace: void-basic-phase3-staging

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
    retry:
      limit: 3
      backoff:
        duration: 3s
        factor: 2
        maxDuration: 1m

  revisionHistoryLimit: 5

---
# üèóÔ∏è **DEVELOPMENT ENVIRONMENT APPLICATION**
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: void-basic-phase3-development
  namespace: argocd
  labels:
    app.kubernetes.io/name: void-basic-phase3
    app.kubernetes.io/component: enterprise-platform
    app.kubernetes.io/part-of: void-basic
    app.kubernetes.io/version: "3.0"
    environment: development
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    notifications.argoproj.io/subscribe.on-sync-failed.slack: dev-alerts
spec:
  source:
    repoURL: https://github.com/Zykairotis/Void-basic.git
    targetRevision: HEAD
    path: phase_3_0/infrastructure/k8s
    helm:
      valueFiles:
        - values-development.yaml
      parameters:
        - name: environment
          value: development
        - name: replicaCount.backend
          value: "1"
        - name: replicaCount.frontend
          value: "1"
        - name: resources.backend.requests.cpu
          value: "100m"
        - name: resources.backend.requests.memory
          value: "256Mi"
        - name: autoscaling.enabled
          value: "false"
        - name: monitoring.enabled
          value: "false"
        - name: security.networkPolicies.enabled
          value: "false"
      releaseName: void-basic-phase3-dev
      timeout: 180s

  destination:
    server: https://kubernetes.default.svc
    namespace: void-basic-phase3-development

  syncPolicy:
    automated:
      prune: true
      selfHeal: false  # Manual intervention for dev
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 2
      backoff:
        duration: 5s
        maxDuration: 30s

  revisionHistoryLimit: 3

---
# üìä **MONITORING STACK APPLICATION**
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: void-basic-phase3-monitoring
  namespace: argocd
  labels:
    app.kubernetes.io/name: void-basic-phase3-monitoring
    app.kubernetes.io/component: monitoring-stack
    app.kubernetes.io/part-of: void-basic
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    notifications.argoproj.io/subscribe.on-sync-failed.slack: monitoring-alerts
spec:
  source:
    repoURL: https://github.com/Zykairotis/Void-basic.git
    targetRevision: main
    path: phase_3_0/infrastructure/monitoring
    helm:
      valueFiles:
        - values-monitoring.yaml
      parameters:
        - name: prometheus.enabled
          value: "true"
        - name: grafana.enabled
          value: "true"
        - name: alertmanager.enabled
          value: "true"
        - name: grafana.dashboards.enabled
          value: "true"
        - name: grafana.dashboards.phase3.enabled
          value: "true"
      releaseName: phase3-monitoring

  destination:
    server: https://kubernetes.default.svc
    namespace: void-basic-phase3-monitoring

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 3
      backoff:
        duration: 10s
        maxDuration: 2m

---
# üîí **SECURITY AND COMPLIANCE APPLICATION**
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: void-basic-phase3-security
  namespace: argocd
  labels:
    app.kubernetes.io/name: void-basic-phase3-security
    app.kubernetes.io/component: security-compliance
    app.kubernetes.io/part-of: void-basic
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    notifications.argoproj.io/subscribe.on-sync-failed.slack: security-alerts
spec:
  source:
    repoURL: https://github.com/Zykairotis/Void-basic.git
    targetRevision: main
    path: phase_3_0/infrastructure/security
    helm:
      valueFiles:
        - values-security.yaml
      parameters:
        - name: networkPolicies.enabled
          value: "true"
        - name: podSecurityPolicies.enabled
          value: "true"
        - name: rbac.create
          value: "true"
        - name: serviceAccount.create
          value: "true"
        - name: compliance.gdpr.enabled
          value: "true"
        - name: compliance.hipaa.enabled
          value: "true"
        - name: compliance.sox.enabled
          value: "true"
      releaseName: phase3-security

  destination:
    server: https://kubernetes.default.svc
    namespace: void-basic-phase3-security

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        maxDuration: 5m
